[versions]
spring-boot = "3.2.1"
guava = "33.0.0-jre"
commons-lang3 = "3.14.0"
cel = "0.4.3"
kotlinx-coroutines = "1.7.3"
kotlin = "1.9.22"
graalvm-plugin = "0.10.1"
graalvm = "24.0.1"
sqlite = "3.45.1.0"
commons-collections4 = "4.4"
axion-release = "1.16.1"
zxing = "3.5.3"
telegram4j = "0.1.0-SNAPSHOT"
rssreader = "3.6.0"
anitomyJ = "0.0.7"
atomashpolskiy-bt = "1.10"
tika = "2.9.1"
jsoup = "1.17.2"
exposed = "0.47.0"
protobuf = "3.25.2"
dokka = "1.9.10"
springdocs = "2.3.0"
therapi-javadoc = "0.15.0"
json-path = "2.9.0"
fuzzywuzzy = "1.4.0"

[libraries]
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
commons-collections4 = { module = "org.apache.commons:commons-collections4", version.ref = "commons-collections4" }
cel-bom = { module = "org.projectnessie.cel:cel-bom", version.ref = "cel" }
cel-tools = { module = "org.projectnessie.cel:cel-tools", version.ref = "cel" }
cel-jackson = { module = "org.projectnessie.cel:cel-jackson", version.ref = "cel" }
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing" }
telegram4j = { module = "com.telegram4j:telegram4j-core", version.ref = "telegram4j" }
rssreader = { module = "com.apptasticsoftware:rssreader", version.ref = "rssreader" }
anitomyJ = { module = "com.dgtlrepublic:anitomyJ", version.ref = "anitomyJ" }
bt-core = { module = "com.github.atomashpolskiy:bt-core", version.ref = "atomashpolskiy-bt" }
bt-dht = { module = "com.github.atomashpolskiy:bt-dht", version.ref = "atomashpolskiy-bt" }
tika-core = { module = "org.apache.tika:tika-core", version.ref = "tika" }
tika-langdetect-optimaize = { module = "org.apache.tika:tika-langdetect-optimaize", version.ref = "tika" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
exposed-spring-boot-stater = { module = "org.jetbrains.exposed:exposed-spring-boot-starter", version.ref = "exposed" }
graalvm-sdk = { module = "org.graalvm.sdk:graal-sdk", version.ref = "graalvm" }
protobuf = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
springdocs-openapi-starter-webmvc-api = { module = "org.springdoc:springdoc-openapi-starter-webmvc-api", version.ref = "springdocs" }
therapi-runtime-javadoc = { module = "com.github.therapi:therapi-runtime-javadoc", version.ref = "therapi-javadoc" }
therapi-javadoc-scribe = { module = "com.github.therapi:therapi-runtime-javadoc-scribe", version.ref = "therapi-javadoc" }
json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "json-path" }
fuzzywuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy" }

[bundles]
cel = ["cel-tools", "cel-jackson"]
bt = ["bt-core", "bt-dht"]
exposed = ["exposed-java-time", "exposed-spring-boot-stater", "exposed-json"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
graalvm = { id = "org.graalvm.buildtools.native", version.ref = "graalvm-plugin" }
axion-release = { id = "pl.allegro.tech.build.axion-release", version.ref = "axion-release" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }