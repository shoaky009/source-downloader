[versions]
spring-boot = "3.3.4"
spring = "6.1.13"
guava = "33.3.1-jre"
commons-lang3 = "3.17.0"
cel = "0.5.1"
kotlinx-coroutines = "1.9.0"
kotlin = "2.0.20"
graalvm-plugin = "0.10.2"
graalvm = "24.1.0"
sqlite = "3.46.1.3"
commons-collections4 = "4.4"
axion-release = "1.18.11"
zxing = "3.5.3"
telegram4j = "0.1.0-SNAPSHOT"
rssreader = "3.8.2"
anitomyJ = "0.0.7"
atomashpolskiy-bt = "1.10"
tika = "2.9.2"
jsoup = "1.18.1"
exposed = "0.55.0"
protobuf = "3.25.2"
dokka = "1.9.20"
springdocs = "2.5.0"
therapi-javadoc = "0.15.0"
json-path = "2.9.0"
fuzzywuzzy = "1.4.0"
gradle-git-properties = "2.4.2"
commons-text = "1.12.0"
jsonschema = "4.36.0"
vertx = "4.5.10"
junit = "5.11.2"
mockito = "5.14.2"
hikaricp = "5.1.0"
micrometer = "1.13.6"
jackson = "2.17.2"
logback = "1.5.11"
slf4j = "2.0.16"
flyway = "10.20.0"
spring-retry = "2.0.10"
cron-utils = "9.2.1"
kotlin-retry = "2.0.1"
jib-layer-filter = "0.3.0"
jib = "3.4.4"
jib-spring-boot = "0.1.0"

[libraries]
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring" }
spring-expression = { module = "org.springframework:spring-expression", version.ref = "spring" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring" }
spring-retry = { module = "org.springframework.retry:spring-retry", version.ref = "spring-retry" }
spring-core = { module = "org.springframework:spring-core", version.ref = "spring" }
spring-boot-admin-client = { module = "de.codecentric:spring-boot-admin-client", version.ref = "spring-boot" }

jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-kotlin-module = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
commons-collections4 = { module = "org.apache.commons:commons-collections4", version.ref = "commons-collections4" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commons-text" }

cel-bom = { module = "org.projectnessie.cel:cel-bom", version.ref = "cel" }
cel-tools = { module = "org.projectnessie.cel:cel-tools", version.ref = "cel" }
cel-jackson = { module = "org.projectnessie.cel:cel-jackson", version.ref = "cel" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

vertx-stack-depchain = { module = "io.vertx:vertx-stack-depchain", version.ref = "vertx" }
vertx-web = { module = "io.vertx:vertx-web", version.ref = "vertx" }
vertx-config-yaml = { module = "io.vertx:vertx-config-yaml", version.ref = "vertx" }
vertx-kotlin-coroutines = { module = "io.vertx:vertx-lang-kotlin-coroutines", version.ref = "vertx" }
vertx-kotlin = { module = "io.vertx:vertx-lang-kotlin", version.ref = "vertx" }
vertx-micrometer-metrics = { module = "io.vertx:vertx-micrometer-metrics", version.ref = "vertx" }

micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
micrometer-registry-jmx = { module = "io.micrometer:micrometer-registry-jmx", version.ref = "micrometer" }

exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-spring-boot-stater = { module = "org.jetbrains.exposed:exposed-spring-boot-starter", version.ref = "exposed" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }

bt-core = { module = "com.github.atomashpolskiy:bt-core", version.ref = "atomashpolskiy-bt" }
bt-dht = { module = "com.github.atomashpolskiy:bt-dht", version.ref = "atomashpolskiy-bt" }
tika-core = { module = "org.apache.tika:tika-core", version.ref = "tika" }
tika-langdetect-optimaize = { module = "org.apache.tika:tika-langdetect-optimaize", version.ref = "tika" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing" }
telegram4j = { module = "io.github.shoaky009:telegram4j-core", version.ref = "telegram4j" }
rssreader = { module = "com.apptasticsoftware:rssreader", version.ref = "rssreader" }
anitomyJ = { module = "com.dgtlrepublic:anitomyJ", version.ref = "anitomyJ" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

graalvm-sdk = { module = "org.graalvm.sdk:graal-sdk", version.ref = "graalvm" }
protobuf = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
springdocs-openapi-starter-webmvc-api = { module = "org.springdoc:springdoc-openapi-starter-webmvc-api", version.ref = "springdocs" }
therapi-runtime-javadoc = { module = "com.github.therapi:therapi-runtime-javadoc", version.ref = "therapi-javadoc" }
therapi-javadoc-scribe = { module = "com.github.therapi:therapi-runtime-javadoc-scribe", version.ref = "therapi-javadoc" }
json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "json-path" }
fuzzywuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy" }
jsonschema-generator = { module = "com.github.victools:jsonschema-generator", version.ref = "jsonschema" }
cron-utils = { module = "com.cronutils:cron-utils", version.ref = "cron-utils" }
kotlin-retry = { module = "com.michael-bull.kotlin-retry:kotlin-retry", version.ref = "kotlin-retry" }
jib-layer-filter = { module = "com.google.cloud.tools:jib-layer-filter-extension-gradle", version.ref = "jib-layer-filter" }
jib-spring-boot = { module = "com.google.cloud.tools:jib-spring-boot-extension-gradle", version.ref = "jib-spring-boot" }

[bundles]
cel = ["cel-tools", "cel-jackson"]
bt = ["bt-core", "bt-dht"]
exposed = ["exposed-java-time", "exposed-json", "exposed-dao", "exposed-jdbc"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
graalvm = { id = "org.graalvm.buildtools.native", version.ref = "graalvm-plugin" }
axion-release = { id = "pl.allegro.tech.build.axion-release", version.ref = "axion-release" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
gradle-git-properties = { id = "com.gorylenko.gradle-git-properties", version.ref = "gradle-git-properties" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }